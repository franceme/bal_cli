name: Ballerina Packaging and Uploading

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install tree
        run: sudo apt-get install tree -y

      - name: Install SDK and Graalvm
        if: false
        run: curl -s "https://get.sdkman.io" | bash && source "$HOME/.sdkman/bin/sdkman-init.sh" && yes|sdk i java 23-graalce

      - name: Show
        if: false
        run: ls -altr $HOME/.sdkman/candidates/ballerina

      - name: Main Executing
        if: false
        run: GRAALVM_HOME=HOME/.sdkman/candidates/java/23-graalce $HOME/.sdkman/candidates/ballerina/current/bin/ballerina build --graalvm

      - name: Main Executing
        if: false 
        run: bal build --graalvm

      - name: Stupid step since github actions
        run: docker logout

      - name: Stupid step since github actions
        run: sudo service docker restart

      - name: Docker Login
        if: false
        uses: docker/login-action@v2.0.0
        with:
          username: frantzme
          password: ${{secrets.DOCKER_TOKEN}}

      - name: Build the docker image #https://hub.docker.com/r/frantzme/ballerina/tags
        run: docker run --rm -u 0 -v `pwd`:/sync/ --workdir /sync/ frantzme/ballerina:lite bal build --graalvm

      - name: Install tree
        run: tree ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Release_${{ steps.time.outputs.time }}
          release_name: Release_${{ steps.time.outputs.time }}

      # https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
      - name: Upload Website Data to the Release
        id: upload-release-asset-website-data
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ${{ github.workspace }}/target/bin/cli.jar
          asset_name: cli.jar
          asset_content_type: application/java-archive
